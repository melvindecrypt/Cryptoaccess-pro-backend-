// models/Investment.js
const mongoose = require('mongoose');
const { Schema } = mongoose;

const investmentSchema = new Schema({
  userId: {
    type: Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },
  // We keep planId for historical reference and easy lookup of initial plan details
  planId: {
    type: Schema.Types.ObjectId,
    ref: 'InvestmentPlan',
    required: true
  },
  amountInvested: {
    type: Number,
    required: true
  },
  status: {
    type: String,
    enum: ['pending', 'active', 'completed', 'cancelled', 'matured'], // Added 'matured' and 'pending'
    default: 'active' // Most investments will start as active after validation
  },
  // --- New fields for investment-specific details (denormalized from plan) ---
  investmentType: { // e.g., "10000 Alpha+", "50000 Beta Elite"
    type: String,
    required: true, // Now required as it's generated by amount invested
  },
  duration: { // e.g., "3 months", "60 days", "1 year" (stored value from plan)
    type: String,
    required: true,
  },
  roi: { // e.g., 0.05 for 5% (stored value from plan)
    type: Number,
    required: true,
  },
  startDate: { // The exact date the investment started
    type: Date,
    default: Date.now,
    required: true,
  },
  endDate: { // The calculated end date of the investment
    type: Date,
    required: true,
  },
  // Optional: Fields to track ROI payouts and total earned
  // totalEarnedRoi: {
  //   type: Number,
  //   default: 0,
  // },
  // lastPayoutDate: {
  //   type: Date,
  // },
}, { timestamps: true }); // Mongoose will automatically add createdAt and updatedAt

const Investment = mongoose.model('Investment', investmentSchema);

module.exports = Investment;
